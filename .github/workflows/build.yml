name: Database Setup
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment for DB Setup'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - demo
jobs:
  setup:
    name: DB Setup for ${{ github.event.inputs.environment || 'dev' }} environment
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: bahmni-cluster-dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BAHMNI_AWS_ID }}
          aws-secret-access-key: ${{ secrets.BAHMNI_AWS_SECRET }}
          aws-region: ${{ secrets.BAHMNI_AWS_REGION }}
          role-to-assume: ${{ secrets.BAHMNI_INFRA_ADMIN_ROLE }}
          role-duration-seconds: 900 # 15 mins
          role-session-name: BahmniInfraAdminSession
      - name: Authorise Kubectl with EKS
        run: aws eks update-kubeconfig --name $CLUSTER_NAME
      - name: Helm Install DB Setup Chart & Wait
        run: |
          RDS_HOST=$(aws ssm get-parameter --with-decryption --name "/dev/rds/mysql/host" --query "Parameter.Value" --output text)
          RDS_USERNAME=$(aws ssm get-parameter --with-decryption --name "/dev/rds/mysql/username" --query "Parameter.Value" --output text)
          RDS_PASSWORD=$(aws ssm get-parameter --with-decryption --name "/dev/rds/mysql/password" --query "Parameter.Value" --output text)
          OPENMRS_DB_USERNAME=$(aws ssm get-parameter --with-decryption --name "/${{ github.event.inputs.environment || 'dev' }}/openmrs/DB_USERNAME" --query "Parameter.Value" --output text)
          OPENMRS_DB_PASSWORD=$(aws ssm get-parameter --with-decryption --name "/${{ github.event.inputs.environment || 'dev' }}/openmrs/DB_PASSWORD" --query "Parameter.Value" --output text)
          REPORTS_DB_USERNAME=$(aws ssm get-parameter --with-decryption --name "/${{ github.event.inputs.environment || 'dev' }}/reports/DB_USERNAME" --query "Parameter.Value" --output text)
          REPORTS_DB_PASSWORD=$(aws ssm get-parameter --with-decryption --name "/${{ github.event.inputs.environment || 'dev' }}/reports/DB_PASSWORD" --query "Parameter.Value" --output text)
          CRATER_DB_USERNAME=$(aws ssm get-parameter --with-decryption --name "/${{ github.event.inputs.environment || 'dev' }}/crater/DB_USERNAME" --query "Parameter.Value" --output text)
          CRATER_DB_PASSWORD=$(aws ssm get-parameter --with-decryption --name "/${{ github.event.inputs.environment || 'dev' }}/crater/DB_PASSWORD" --query "Parameter.Value" --output text)
          
          helm upgrade db-setup db-setup/ \
          --set environment=${{ github.event.inputs.environment || 'dev' }} \
          --set DB_HOST=$RDS_HOST \
          --set DB_ROOT_USERNAME=$RDS_USERNAME \
          --set DB_ROOT_PASSWORD=$RDS_PASSWORD \
          --set OPENMRS_DB_USERNAME=$OPENMRS_DB_USERNAME \
          --set OPENMRS_DB_PASSWORD=$OPENMRS_DB_PASSWORD \
          --set REPORTS_DB_USERNAME=$REPORTS_DB_USERNAME \
          --set REPORTS_DB_PASSWORD=$REPORTS_DB_PASSWORD \
          --set CRATER_DB_USERNAME=$CRATER_DB_USERNAME \
          --set CRATER_DB_PASSWORD=$CRATER_DB_PASSWORD \
          --install \
          --wait \
          --wait-for-jobs

      - name: Uninstall DB Setup Helm Chart
        run: helm uninstall db-setup

